---
title: "ST558 - Project 2 - Shiny App - Kyra Kapsaskis"
author: "Kyra Kapsaskis"
format: html
editor: visual
---

```{r}
library(httr)
library(jsonlite)
library(tidyr)
library(shinydashboard)
library(DT)
library(shiny)
library(caret)
library(dplyr)
library(ggplot2)
library(lubridate)
```



```{r}

# Querying the API - including 6 parameters

sunrise_sunset_query <- function(latitude, longitude, date, tzid, callback=NULL, format=1){

# using the unchanging part of the url as the base
  base_URL <- "https://api.sunrise-sunset.org/json"
  
# to create 'url' object we need to combine all the parts 
  
  url <- paste0(base_URL,
                
        # in decimal degrees  
        
                "?lat=", latitude,
        
        # in decimal degrees
        
                "&lng=", longitude,
        
        # Date in YYYY-MM-DD format
        
                "&date=", date,
        
        # Specified Time Zone that you can find here         
        # https://www.php.net/manual/en/timezones.php
        
                "&tzid=", tzid,
        
        # 0 or 1, 1 is default, for the standard of time (ISO 8601)
        
                "&formatted=", format)
  
        # CALLBACK - Optional. Any valid JavaScript method name can be used as the callback value.  
        # The complete JSON API response will be wrapped in the callback function requested.
  
               # "&callback=", callback)

  if (!is.null(callback)) {
      url <- paste0(url, "&callback=", callback)
  }

# Print the constructed URL for debugging
  print(url)
  
# creating an object for the response to the API call
  response <- GET(url)
  

# Parsing the response content from JSON
  content_text <- content(response, "text", encoding = "UTF-8")
  parsed <- fromJSON(content_text)
  
# Checking the structure of the parsed data
  str(parsed)
  
# creating a tibble
  my_requested_data <- as_tibble(parsed$results)
  
  return(my_requested_data)
}


```

```{r}
# testing out the querying function

sunrise_sunset_query(35.913200, -79.055847, 2024-07-07, "America/New_York")
```
```{r}

chapel_hill_data <- sunrise_sunset_query(35.913200, -79.055847, 2024-07-07, "America/New_York")
```

```{r}
chapel_hill_data
```

------------------------------------------------------------------------


```{r}
StartDate<-as.Date("2024-01-01")
EndDate<- as.Date("2024-12-31")
dates <- seq(StartDate, EndDate, by = "days")

print(head(dates))
```


```{r}
capital_cities <- read.csv("https://gist.githubusercontent.com/ofou/df09a6834a8421b4f376c875194915c9/raw/355eb56e164ddc3cd1a9467c524422cb674e71a9/country-capital-lat-long-population.csv")
```


```{r}
capital_cities 
```

```{r}
help(format)
```


```{r}
for (i in dates) {
  formatted_date <- format(i, "%Y%-%m-%d")
  for (j in 1:nrow(capital_cities)) {
    lat <- capital_cities$Latitude[j]
    lon <- capital_cities$Longitude[j]
    result <- sunrise_sunset_query(lat, lon, formatted_date, "America/New_York")
    print(result)
  }
} 
```





```{r}
# Run the Shiny app
shinyApp(ui, server)
```
