---
title: "ST558 - Project 2 - Shiny App - Kyra Kapsaskis"
author: "Kyra Kapsaskis"
format: html
editor: visual
---

```{r}
library(httr)
library(jsonlite)
library(tidyr)
library(shinydashboard)
library(DT)
library(shiny)
library(caret)
library(dplyr)
library(ggplot2)
```

```{r}

# Querying the API

sunrise_sunset_query <- function(latitude, longitude, date, tzid, callback, format){

# using the unchanging part of the url as the base
  
  base_URL <- "https://api.sunrise-sunset.org"
  
# to create 'url' object we need to combine all the parts  
  
  url <- paste0(base_URL,
    
    "/json?lat=",
    
# in decimal degrees
    
    latitude,
    
    "&lng=",
    
# in decimal degrees
    
    longitude,
    
    "&date=",
    
# Date in YYYY-MM-DD format
    
    date,

    "&tzid=",

# Specified Time Zone that you can find here https://www.php.net/manual/en/timezones.php

    tzid,

    "&callback=",

# CALLBACK - Any valid JavaScript method name can be used as the callback value.  The complete JSON API response will be wrapped in the callback function requested.

    callback,

    "&formatted=",

# 0 or 1, 1 is default, for the standard of time (ISO 8601)

    format,

    sep = "")
  
  response <- GET(url, query = params)
  parsed <- myData$content |>
    rawToChar() |>
    fromJSON()
  str(parsed, max.level = 1)
  parsed$results |>
  as_tibble()
}


```


```{r}
help(GET)
```

------------------------------------------------------------------------

```{r}
URL_base <- "https://api.sunrise-sunset.org/json"
```

```{r}
URL_example <- "https://api.sunrise-sunset.org/json?lat=36.7201600&lng=-4.4203400"
```

```{r}
example_info <- GET(URL_example)
str(example_info, max.level = 1)
```

```{r}
parsed <- fromJSON(rawToChar(example_info$content)) 
ex_info <- as_tibble(parsed$results) 
ex_info
```

```{r}
StartDate<-"2024-01-01"
EndDate<- "2024-12-31"
dates<-seq(as.POSIXct(StartDate, format="%Y-%m-%d"), as.POSIXct(EndDate, format="%Y-%m-%d"), by='days')
```

```{r}
for (f in as.list(dates)){
 print(str(f))
}
```

```{r}

# Example function

# get_sunrise_sunset <- function(latitude, longitude, date, tzid){
#   URL <- paste("https://api.sunrise-sunset.org/json",
#     "?lat=",
#     # in decimal degrees
#     latitude,
#     "&lng=",
#     # in decimal degrees
#     longitude,
#     "&date=",
#     # Date in YYYY-MM-DD format
#     date,
#     "&tzid=",
#     # Specified Time Zone that you can find here https://www.php.net/manual/en/timezones.php
#     tzid,
#     sep = "")
#   myData <- GET(URL)
#   parsed <- myData$content |>
#     rawToChar() |>
#     fromJSON()
#   str(parsed, max.level = 1)
#   parsed$results |>
#   as_tibble()
# }
```

```{r}
URL
```

```{r}
chapel_hill_data <- get_sunrise_sunset(35.913200, -79.055847, 2024-07-07, "America/New_York")
```

```{r}
chapel_hill_data
```

```{r}
Paris <- get_sunrise_sunset(48.864716, 2.349014, 2024-07-07)
Athens
Tokyo
Oslo
NYC
BuenosAires
Cairo
NewDelhi
Beijing
Bangkok
Moscow
Lisbon

```

```{r}
Paris
```

```{r}
chapel_hill_plot <- ggplot(chapel_hill_data, aes(day_length, sunrise)) + geom_point()
```

# Shiny App

```{r}
shinyUI(fluidPage(
  
  # Application title
  uiOutput("Finding the time of Sunrise and Sunset"),
  
  # Sidebar with options for the data set
  sidebarLayout(
    sidebarPanel(
      h3("Select the mammal's biological order:"),
      selectizeInput("vore", "Vore", selected = "omni", choices = levels(as.factor(msleep$vore))),
      br(),
      sliderInput("size", "Size of Points on Graph",
                  min = 1, max = 10, value = 5, step = 1),
      checkboxInput("conservation", h4("Color Code Conservation Status", style = "color:red;")),
      conditionalPanel("input.conservation", checkboxInput("alpha", h5("Also change symbol based on REM sleep?")))
    ),
    
    # Show outputs
    mainPanel(
      plotOutput("sleepPlot"),
      textOutput("info"),
      tableOutput("table")
      )
  )
))
```

```{r}
# Run the Shiny app
shinyApp(ui, server)
```
